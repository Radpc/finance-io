// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  payments          Payment[]
  recurringPayments RecurringPayment[]
}

model Category {
  id    Int    @id @default(autoincrement())
  label String

  payments  Payment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Tag {
  id    Int    @id @default(autoincrement())
  label String

  payments  Payment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Payment {
  id            Int      @id @default(autoincrement())
  description   String
  value         Float
  observation   String?
  status        String
  paymentMethod String
  paymentDate   DateTime @default(now())

  createdBy User @relation(fields: [userId], references: [id])
  userId    Int

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  tags       Tag[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  recurringPayment   RecurringPayment? @relation(fields: [recurringPaymentId], references: [id])
  recurringPaymentId Int?
}

model RecurringPayment {
  id                   Int     @id @default(autoincrement())
  totalValue           Float?
  numberOfInstallments Int?
  automaticPayment     Boolean
  singlePaymentValue   Float

  createdBy User @relation(fields: [userId], references: [id])
  userId    Int

  dayOfMonth Int

  payments Payment[]
}
